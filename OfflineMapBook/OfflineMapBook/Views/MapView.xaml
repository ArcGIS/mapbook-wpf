<UserControl x:Class="OfflineMapBook.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OfflineMapBook"
             xmlns:converters="clr-namespace:OfflineMapBook.Converters"
             xmlns:esriUI="http://schemas.esri.com/arcgis/runtime/2013" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityInverseConverter x:Key="BooleanToVisibilityInverseConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Set mapview with map -->
        <esriUI:MapView x:Name="MapBookMapView" Map="{Binding Map}" GraphicsOverlays="{Binding GraphicsOverlays}" Grid.Row="1"/>

        <!-- Make top bar with buttons -->
        <Grid Background="#3F51B5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            
            <!-- Back Button -->
            <Button Style="{StaticResource FlatButton}" Command="{Binding BackCommand}" Grid.Column="0">
                <TextBlock Text="&#xE0A6;" Style="{StaticResource SymbolButton}"/>
            </Button>
            
            <!-- Map Title -->
            <TextBlock Text="{Binding Map.Item.Title}" VerticalAlignment="Center" Style="{StaticResource WhiteText}" FontSize="30" Grid.Column="1"/>
            <CheckBox IsChecked="True">
                <!--<CheckBox.Resources>
                    <Style TargetType="CheckBox">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="Pink"/>
                        <Setter Property="BorderBrush" Value="Yellow"/>
                        <Setter Property="BorderThickness" Value="5"/>
                    </Style>
                </CheckBox.Resources>-->
            </CheckBox>
            
            <!-- Bookmarks Button -->
            <ToggleButton Style="{StaticResource FlatToggleButton}" x:Name="toggleBookmarks"  Grid.Column="2">
                <TextBlock Text="&#xE8A4;" Style="{StaticResource SymbolButton}"/>
            </ToggleButton>
            
            <!-- Search Button -->
            <ToggleButton Style="{StaticResource FlatToggleButton}" x:Name="toggleSearch"  Grid.Column="3">
                <TextBlock Text="&#xE721;" Style="{StaticResource SymbolButton}"/>
            </ToggleButton>
            
            <!-- Legend Button -->
            <ToggleButton Style="{StaticResource FlatToggleButton}" x:Name="toggleLegend" Grid.Column="4">
                <TextBlock Text="&#xE81E;" Style="{StaticResource SymbolButton}"/>
            </ToggleButton>
        </Grid>
        
        <!-- Right panel area opening over the map -->
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right">

            <!-- Bookmarks Panel-->
            <ListView Width="300" ItemsSource="{Binding Map.Bookmarks}" Background="#3F51B5" Visibility="{Binding IsChecked, ElementName=toggleBookmarks, 
                Converter={StaticResource BooleanToVisibilityConverter}}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Name}" Style="{StaticResource ListViewButton}" FontSize="20" 
                                    Command="{Binding DataContext.ZoomToBookmarkCommand, RelativeSource={RelativeSource AncestorType=ListView}}" 
                                    CommandParameter="{Binding Path=Viewpoint}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            
            <!-- Search Panel -->
            <StackPanel x:Name="SearchPanel" Orientation="Vertical" Visibility="{Binding IsChecked, ElementName=toggleSearch, 
                Converter={StaticResource BooleanToVisibilityConverter}}"
                FocusManager.FocusedElement="{Binding ElementName=SearchBox}"
                        IsVisibleChanged="SearchPanel_IsVisibleChanged">
                
                <!-- Search Box and Button-->
                <Border BorderBrush="White" BorderThickness="1"> 
                    <StackPanel Orientation="Horizontal">
                        <TextBox x:Name="SearchTextBox" Width="260" Height="40" Background="#F4F4F4" BorderBrush="#3F51B5" 
                                 BorderThickness="5" FontSize="20" Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Style="{StaticResource FlatButton}" Width="40" Height="40" Command="{Binding SearchCommand}" CommandParameter="{Binding SearchText, Mode=TwoWay}">
                            <TextBlock Text="&#xE721;" FontFamily="Segoe MDL2 Assets" FontSize="20"/>
                        </Button>
                    </StackPanel>
                </Border>
                
                <!-- Search Autocomplete Listbox-->
                <ListView Width="300" ItemsSource="{Binding SuggestionsList}" Background="#3F51B5">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Label}" Style="{StaticResource ListViewButton}" FontSize="20" 
                                    Command="{Binding DataContext.SearchCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </StackPanel>

            <!-- Table of Contents Panel -->
            <Border BorderBrush="White" BorderThickness="0.5">
            <esriUI:TableOfContents GeoView="{Binding ElementName=MapBookMapView}" ShowLegend="True"  
                                    Visibility="{Binding IsChecked, ElementName=toggleLegend, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Width="300" Style="{StaticResource TOC}">
                <esriUI:TableOfContents.LayerItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Sublayers}">
                        <Grid Margin="0,2">
                            <Grid.Resources>
                                <Style TargetType="MenuItem" x:Key="HideMenuItemWhenDisabled">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsInScaleRange, Mode=OneWay}" Value="false">
                                            <Setter Property="Opacity" Value=".5" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <!--Useful for debugging purposes:-->
                            <!--<Grid.ToolTip>
                            <StackPanel>
                                <TextBlock Text="IsActive" />
                                <TextBlock Text="{Binding IsActive}" />
                                <TextBlock Text="HasError" />
                                <TextBlock Text="{Binding HasError}" />
                                <TextBlock Text="{Binding Error}" />
                                <TextBlock Text="IsLoading" />
                                <TextBlock Text="{Binding IsLoading}" />
                                <TextBlock Text="IsInScaleRange" />
                                <TextBlock Text="{Binding IsInScaleRange}" />
                            </StackPanel>
                        </Grid.ToolTip>-->
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem IsCheckable="True" IsChecked="{Binding LayerContent.IsVisible, Mode=TwoWay}" Header="Enabled" IsEnabled="{Binding LayerContent.CanChangeVisibility}" Style="{StaticResource HideMenuItemWhenDisabled}" />
                                    <MenuItem Command="{Binding ZoomToCommand}" Header="Zoom to" Style="{StaticResource HideMenuItemWhenDisabled}" />
                                    <MenuItem Command="{Binding ReloadCommand}" Header="Reload" Style="{StaticResource HideMenuItemWhenDisabled}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <esriUI:SymbolDisplay Symbol="{Binding Symbol, Mode=OneTime}" Margin="0,0,5,0" >
                                <esriUI:SymbolDisplay.Style>
                                    <Style TargetType="esriUI:SymbolDisplay">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Symbol, Mode=OneTime}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </esriUI:SymbolDisplay.Style>
                            </esriUI:SymbolDisplay>

                            <CheckBox Grid.Column="1" IsChecked="{Binding LayerContent.IsVisible, Mode=TwoWay}">
                                <CheckBox.LayoutTransform>
                                    <ScaleTransform ScaleX="2.5" ScaleY="2.5" />
                                </CheckBox.LayoutTransform>
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                                    <BulletDecorator Background="Transparent">
                                                        <BulletDecorator.Bullet>
                                                            <Border x:Name="Border" 
                                                               Width="13" 
                                                               Height="13" 
                                                               CornerRadius="0" 
                                                               Background="#3F51B5"
                                                               BorderThickness="1"
                                                               BorderBrush="White">
                                                                <Path 
                                                                    Width="7" Height="7" 
                                                                    x:Name="CheckMark"
                                                                    SnapsToDevicePixels="False" 
                                                                    Stroke="White"
                                                                    StrokeThickness="1"
                                                                    Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                                            </Border>
                                                        </BulletDecorator.Bullet>
                                                        <ContentPresenter Margin="4,0,0,0"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          RecognizesAccessKey="True"/>
                                                    </BulletDecorator>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="false">
                                                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter TargetName="Border" Property="Background" Value="#3F51B5" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter TargetName="Border" Property="Background" Value="#3F51B5" />
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter TargetName="Border" Property="Background" Value="#3F51B5" />
                                                            <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                                                            <Setter Property="Foreground" Value="#888888"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LayerContent.CanChangeVisibility, Mode=OneTime}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                            <TextBlock Text="{Binding LayerContent.Name, Mode=OneWay}" Grid.Column="2" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasError}" Value="True">
                                                <Setter Property="Foreground" Value="Red" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                <Setter Property="Opacity" Value=".5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </HierarchicalDataTemplate>
                </esriUI:TableOfContents.LayerItemTemplate>

            </esriUI:TableOfContents>
            </Border>
        </StackPanel>
        
        <!-- Left Identify Panel area opening over map -->
        <StackPanel Grid.Row="1" HorizontalAlignment="Left" Background="#3F51B5" Width="300" Visibility="{Binding IdentifyModelsList.Count, Converter={StaticResource CountToVisibilityConverter}}">
            <Border BorderBrush="White" BorderThickness="0,1,0,0" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource FlatButton}" Width="100" Height="40" Grid.Column="0" 
                            Visibility="{Binding IdentifyModelsList.Count, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=chevron}">
                        <TextBlock Text="&#xE0E2;" FontFamily="Segoe MDL2 Assets" FontSize="20"/>
                    </Button>
                    <Button Style="{StaticResource FlatButton}" Width="100" Height="40" Grid.Column="1"
                            Visibility="{Binding IdentifyModelsList.Count, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=chevron}">
                        <TextBlock Text="&#xE0E3;" FontFamily="Segoe MDL2 Assets" FontSize="20"/>
                    </Button>
                    <!-- Close button -->
                    <Button Style="{StaticResource FlatButton}" Width="100" Height="40" Grid.Column="2" Command="{Binding CloseIdentifyCommand}">
                        <TextBlock Text="&#xE894;" FontFamily="Segoe MDL2 Assets" FontSize="20"/>
                    </Button>
                </Grid>
            </Border>
            <ItemsControl x:Name="virtualItemsControl" ItemsSource="{Binding IdentifyModelsList}" Background="#3F51B5" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Border BorderBrush="White" BorderThickness="0,1,0,0">
                                <TextBlock Text="{Binding LayerName}" Style="{StaticResource WhiteText}" 
                                           FontSize="20" FontWeight="SemiBold" Margin="5,10,5,10" TextWrapping="Wrap"/>
                            </Border>
                            <ListView ItemsSource="{Binding Attributes}" Background="Transparent" Padding="5">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="150"/>
                                                <ColumnDefinition Width="150"/>
                                            </Grid.ColumnDefinitions>
                                            <Border BorderBrush="White" BorderThickness="0,0,1,0">
                                                <TextBlock Text="{Binding Key}" Grid.Column="0" Style="{StaticResource WhiteText}" 
                                                           FontSize="15" FontWeight="SemiBold" Margin="0,5,0,0"/>
                                            </Border>
                                            <TextBlock Text="{Binding Value}" Grid.Column="1" Style="{StaticResource WhiteText}" 
                                                       FontSize="15" FontWeight="Thin" TextWrapping="Wrap" Margin="5,5,0,0"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <ContentPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Grid>
</UserControl>
